{"ast":null,"code":"var _jsxFileName = \"/Users/julia/Desktop/filmApp/src/components/content/slide-show/Slideshow.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './Slideshow.scss';\n\nconst Slideshow = props => {\n  const {\n    images,\n    auto,\n    showArrows\n  } = props;\n  const [state, setState] = useState({\n    slideShow: images[0],\n    slideIndex: 0\n  });\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [sliderInterval, setSliderInterval] = useState(0);\n  const {\n    slideShow,\n    slideIndex\n  } = state;\n  let currentSlideIndex = 0;\n  useEffect(() => {\n    if (auto) {\n      const timeInterval = setInterval(() => {\n        autoMoveSlide();\n      }, 5000);\n      setSliderInterval(timeInterval);\n      return () => {\n        clearInterval(timeInterval);\n        clearInterval(sliderInterval);\n      };\n    } // eslint-disable-next-line\n\n  }, []);\n\n  const autoMoveSlide = () => {\n    let lastIndex = 0;\n    lastIndex = currentSlideIndex + 1;\n    currentSlideIndex = lastIndex >= images.length ? 0 : lastIndex;\n    setState(prev => ({ ...prev,\n      slideIndex: currentSlideIndex,\n      slideShow: images[currentSlideIndex]\n    }));\n  };\n\n  const moveSlideWithArrows = type => {\n    let index = currentIndex;\n\n    if (type === 'prev') {\n      if (currentIndex <= 0) {\n        index = images.length - 1;\n      } else {\n        index -= 1;\n      }\n    } else {\n      if (currentIndex < images.length) {\n        index += 1;\n      }\n\n      if (index === images.length) {\n        index = 0;\n      }\n    }\n\n    setCurrentIndex(index);\n    setState(prev => ({ ...prev,\n      slideIndex: index,\n      slideShow: images[index]\n    }));\n  };\n\n  const RenderArrows = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"slider-arrows\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"slider-arrow slider-arrow--left\",\n      onClick: () => moveSlideWithArrows('prev'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"slider-arrow slider-arrow--right\",\n      onClick: () => moveSlideWithArrows('next'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  const Indicators = props => {\n    const {\n      currentSlide\n    } = props;\n    const listIndicators = images.map((slide, i) => {\n      const btnClasses = i === currentSlide ? 'slider-navButton slider-navButton--active' : 'slider-navButton';\n      return /*#__PURE__*/React.createElement(\"button\", {\n        className: btnClasses,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 14\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"slider-nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 12\n      }\n    }, listIndicators);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slider-slides\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, images && images.length && slideShow && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slider-image\",\n    style: {\n      backgroundImage: `url(${slideShow.url})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 81\n    }\n  })), /*#__PURE__*/React.createElement(Indicators, {\n    currentSlide: slideIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }), showArrows ? /*#__PURE__*/React.createElement(RenderArrows, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 23\n    }\n  }) : null));\n};\n\nSlideshow.propTypes = {\n  images: PropTypes.array.isRequired,\n  auto: PropTypes.bool.isRequired,\n  showArrows: PropTypes.bool.isRequired,\n  currentSlide: PropTypes.number\n};\nexport default Slideshow;","map":{"version":3,"sources":["/Users/julia/Desktop/filmApp/src/components/content/slide-show/Slideshow.js"],"names":["React","useState","useEffect","PropTypes","Slideshow","props","images","auto","showArrows","state","setState","slideShow","slideIndex","currentIndex","setCurrentIndex","sliderInterval","setSliderInterval","currentSlideIndex","timeInterval","setInterval","autoMoveSlide","clearInterval","lastIndex","length","prev","moveSlideWithArrows","type","index","RenderArrows","Indicators","currentSlide","listIndicators","map","slide","i","btnClasses","backgroundImage","url","propTypes","array","isRequired","bool","number"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Slideshow.scss';\n\nconst Slideshow = (props) => {\n  const { images, auto, showArrows } = props;\n  const [state, setState] = useState({\n    slideShow: images[0],\n    slideIndex: 0\n  });\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [sliderInterval, setSliderInterval] = useState(0);\n\n  const { slideShow, slideIndex } = state;\n  let currentSlideIndex = 0;\n\n  useEffect(() => {\n    if (auto) {\n      const timeInterval = setInterval(() => {\n        autoMoveSlide();\n      }, 5000);\n      setSliderInterval(timeInterval);\n\n      return () => {\n        clearInterval(timeInterval);\n        clearInterval(sliderInterval);\n      };\n    }\n\n    // eslint-disable-next-line\n  }, []);\n\n  const autoMoveSlide = () => {\n    let lastIndex = 0;\n    lastIndex = currentSlideIndex + 1;\n    currentSlideIndex = lastIndex >= images.length ? 0 : lastIndex;\n    setState((prev) => ({\n      ...prev,\n      slideIndex: currentSlideIndex,\n      slideShow: images[currentSlideIndex]\n    }));\n  };\n\n  const moveSlideWithArrows = (type) => {\n    let index = currentIndex;\n    if (type === 'prev') {\n      if (currentIndex <= 0) {\n        index = images.length - 1;\n      } else {\n        index -= 1;\n      }\n    } else {\n      if (currentIndex < images.length) {\n        index += 1;\n      }\n      if (index === images.length) {\n        index = 0;\n      }\n    }\n    setCurrentIndex(index);\n    setState((prev) => ({\n      ...prev,\n      slideIndex: index,\n      slideShow: images[index]\n    }));\n  };\n\n  const RenderArrows = () => {\n    return (\n      <div className=\"slider-arrows\">\n        <div className=\"slider-arrow slider-arrow--left\" onClick={() => moveSlideWithArrows('prev')} />\n        <div className=\"slider-arrow slider-arrow--right\" onClick={() => moveSlideWithArrows('next')} />\n      </div>\n    );\n  };\n\n  const Indicators = (props) => {\n    const { currentSlide } = props;\n    const listIndicators = images.map((slide, i) => {\n      const btnClasses = i === currentSlide ? 'slider-navButton slider-navButton--active' : 'slider-navButton';\n      return <button className={btnClasses} key={i} />;\n    });\n    return <div className=\"slider-nav\">{listIndicators}</div>;\n  };\n\n  return (\n    <>\n      <div className=\"slider\">\n        <div className=\"slider-slides\">{images && images.length && slideShow && <div className=\"slider-image\" style={{ backgroundImage: `url(${slideShow.url})` }}></div>}</div>\n        <Indicators currentSlide={slideIndex} />\n        {showArrows ? <RenderArrows /> : null}\n      </div>\n    </>\n  );\n};\n\nSlideshow.propTypes = {\n  images: PropTypes.array.isRequired,\n  auto: PropTypes.bool.isRequired,\n  showArrows: PropTypes.bool.isRequired,\n  currentSlide: PropTypes.number\n};\n\nexport default Slideshow;\n"]},"metadata":{},"sourceType":"module"}